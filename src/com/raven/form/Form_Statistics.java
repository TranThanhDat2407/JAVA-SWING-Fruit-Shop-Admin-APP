package com.raven.form;

import dao.AddressDAO;
import dao.ThongKeDAO;
import java.io.File;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import utils.ExcelUtils;
import utils.ThongBao;

public class Form_Statistics extends javax.swing.JPanel {

    /**
     * Creates new form Form_1
     */
    public Form_Statistics() throws SQLException {
        initComponents();
        init();
    }

    void init() throws SQLException {
        initTR_MonthCbo();
        initTR_YearCbo();
        initTSP_MonthCbo();
        initTSP_YearCbo();
        initU_MonthCbo();
        initU_YearCbo();
        initO_MonthCbo();
        initO_YearCbo();
        fillTableTR(2024, 7);
        fillTableTSP(2024, 7);
        fillTableU(2024, 7);
        fillTableO(2024, 7);
        initLblTotalUsers(2024,7);
        initLblTotalOrders(2024,7);
    }

    void initTR_MonthCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int i = 1; i <= 12; i++) {
            model.addElement(String.valueOf(i));
        }
        cboTR_Month.setModel(model);
    }

    void initTR_YearCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int year = 2020; year <= 2024; year++) {
            model.addElement(String.valueOf(year));
        }

        cboTR_Year.setModel(model);
    }

    void initTSP_MonthCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int i = 1; i <= 12; i++) {
            model.addElement(String.valueOf(i));
        }
        cboTSP_Month.setModel(model);
    }

    void initTSP_YearCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int year = 2020; year <= 2024; year++) {
            model.addElement(String.valueOf(year));
        }

        cboTSP_Year.setModel(model);
    }
    
    void initO_MonthCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int i = 1; i <= 12; i++) {
            model.addElement(String.valueOf(i));
        }
        cboO_Month.setModel(model);
    }

    void initO_YearCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int year = 2020; year <= 2024; year++) {
            model.addElement(String.valueOf(year));
        }

        cboO_Year.setModel(model);
    }
    
        void initU_MonthCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int i = 1; i <= 12; i++) {
            model.addElement(String.valueOf(i));
        }
        cboU_Month.setModel(model);
    }

        void initU_YearCbo() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.removeAllElements();
        for (int year = 2020; year <= 2024; year++) {
            model.addElement(String.valueOf(year));
        }

        cboU_Year.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        TabStatistics = new javax.swing.JTabbedPane();
        pnTotalRevenue = new javax.swing.JPanel();
        panelBorder1 = new com.raven.swing.PanelBorder();
        jLabel1 = new javax.swing.JLabel();
        spTable = new javax.swing.JScrollPane();
        tbl_TR = new com.raven.swing.Table();
        cboTR_Month = new javax.swing.JComboBox<>();
        cboTR_Year = new javax.swing.JComboBox<>();
        jLabel81 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        btnTR_Export = new javax.swing.JButton();
        pnBestSellProduct = new javax.swing.JPanel();
        panelBorder2 = new com.raven.swing.PanelBorder();
        jLabel2 = new javax.swing.JLabel();
        spTable1 = new javax.swing.JScrollPane();
        tbl_TSP = new com.raven.swing.Table();
        cboTSP_Month = new javax.swing.JComboBox<>();
        cboTSP_Year = new javax.swing.JComboBox<>();
        jLabel87 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        btnTSP_Export = new javax.swing.JButton();
        pnOrders = new javax.swing.JPanel();
        panelBorder3 = new com.raven.swing.PanelBorder();
        lblTotalOrders = new javax.swing.JLabel();
        spTable2 = new javax.swing.JScrollPane();
        tbl_O = new com.raven.swing.Table();
        cboO_Month = new javax.swing.JComboBox<>();
        cboO_Year = new javax.swing.JComboBox<>();
        jLabel88 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        btnO_Export = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pnUsers = new javax.swing.JPanel();
        panelBorder4 = new com.raven.swing.PanelBorder();
        jLabel4 = new javax.swing.JLabel();
        spTable3 = new javax.swing.JScrollPane();
        tbl_U = new com.raven.swing.Table();
        cboU_Month = new javax.swing.JComboBox<>();
        cboU_Year = new javax.swing.JComboBox<>();
        jLabel89 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        btnU_Export = new javax.swing.JButton();
        lblTotalUsers = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(0, 0));

        TabStatistics.setBackground(new java.awt.Color(255, 255, 255));

        pnTotalRevenue.setBackground(new java.awt.Color(255, 255, 255));

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(127, 127, 127));
        jLabel1.setText("Total Revenue");

        spTable.setBorder(null);

        tbl_TR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Total Revenue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spTable.setViewportView(tbl_TR);

        cboTR_Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTR_Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTR_MonthActionPerformed(evt);
            }
        });

        cboTR_Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTR_Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTR_YearActionPerformed(evt);
            }
        });

        jLabel81.setText("Year");

        jLabel75.setText("Month");

        btnTR_Export.setBackground(new java.awt.Color(0, 102, 102));
        btnTR_Export.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTR_Export.setForeground(new java.awt.Color(255, 255, 255));
        btnTR_Export.setText("Export to Excel");
        btnTR_Export.setBorderPainted(false);
        btnTR_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTR_ExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(jLabel75)
                        .addGap(43, 43, 43)
                        .addComponent(cboTR_Month, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel81)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTR_Year, 0, 701, Short.MAX_VALUE))
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(spTable)
                        .addContainerGap())))
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(btnTR_Export, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnTR_Export))
                .addGap(40, 40, 40)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTR_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel81)
                    .addComponent(cboTR_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel75))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnTotalRevenueLayout = new javax.swing.GroupLayout(pnTotalRevenue);
        pnTotalRevenue.setLayout(pnTotalRevenueLayout);
        pnTotalRevenueLayout.setHorizontalGroup(
            pnTotalRevenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTotalRevenueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnTotalRevenueLayout.setVerticalGroup(
            pnTotalRevenueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTotalRevenueLayout.createSequentialGroup()
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabStatistics.addTab("Total Revenue", pnTotalRevenue);

        pnBestSellProduct.setBackground(new java.awt.Color(255, 255, 255));

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(127, 127, 127));
        jLabel2.setText("Top Sell Products");

        spTable1.setBorder(null);

        tbl_TSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Product ID", "Product Name", "Price", "Total Sold Quantity", "Total Reneuve"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spTable1.setViewportView(tbl_TSP);

        cboTSP_Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTSP_Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTSP_MonthActionPerformed(evt);
            }
        });

        cboTSP_Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTSP_Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTSP_YearActionPerformed(evt);
            }
        });

        jLabel87.setText("Year");

        jLabel76.setText("Month");

        btnTSP_Export.setBackground(new java.awt.Color(0, 102, 102));
        btnTSP_Export.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTSP_Export.setForeground(new java.awt.Color(255, 255, 255));
        btnTSP_Export.setText("Export to Excel");
        btnTSP_Export.setBorderPainted(false);
        btnTSP_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTSP_ExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel76)
                        .addGap(43, 43, 43)
                        .addComponent(cboTSP_Month, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel87)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboTSP_Year, 0, 701, Short.MAX_VALUE))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(spTable1)
                        .addContainerGap())))
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addComponent(btnTSP_Export, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnTSP_Export))
                .addGap(40, 40, 40)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTSP_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel87)
                    .addComponent(cboTSP_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel76))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnBestSellProductLayout = new javax.swing.GroupLayout(pnBestSellProduct);
        pnBestSellProduct.setLayout(pnBestSellProductLayout);
        pnBestSellProductLayout.setHorizontalGroup(
            pnBestSellProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBestSellProductLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnBestSellProductLayout.setVerticalGroup(
            pnBestSellProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBestSellProductLayout.createSequentialGroup()
                .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabStatistics.addTab("Top Sell Products", pnBestSellProduct);

        panelBorder3.setBackground(new java.awt.Color(255, 255, 255));

        lblTotalOrders.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lblTotalOrders.setForeground(new java.awt.Color(127, 127, 127));
        lblTotalOrders.setText("Total: ");

        spTable2.setBorder(null);

        tbl_O.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Order ID", "User ID", "User name", "Email", "Total", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spTable2.setViewportView(tbl_O);

        cboO_Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboO_Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboO_MonthActionPerformed(evt);
            }
        });

        cboO_Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboO_Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboO_YearActionPerformed(evt);
            }
        });

        jLabel88.setText("Year");

        jLabel77.setText("Month");

        btnO_Export.setBackground(new java.awt.Color(0, 102, 102));
        btnO_Export.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnO_Export.setForeground(new java.awt.Color(255, 255, 255));
        btnO_Export.setText("Export to Excel");
        btnO_Export.setBorderPainted(false);
        btnO_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnO_ExportActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(127, 127, 127));
        jLabel5.setText("Orders");

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(127, 127, 127));
        jLabel7.setText("Total: ");

        javax.swing.GroupLayout panelBorder3Layout = new javax.swing.GroupLayout(panelBorder3);
        panelBorder3.setLayout(panelBorder3Layout);
        panelBorder3Layout.setHorizontalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addComponent(jLabel77)
                        .addGap(43, 43, 43)
                        .addComponent(cboO_Month, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel88)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboO_Year, 0, 701, Short.MAX_VALUE))
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addComponent(spTable2)
                        .addContainerGap())
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnO_Export, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelBorder3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTotalOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        panelBorder3Layout.setVerticalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnO_Export)
                    .addComponent(jLabel5))
                .addGap(10, 10, 10)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalOrders)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboO_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel88)
                    .addComponent(cboO_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel77))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTable2, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnOrdersLayout = new javax.swing.GroupLayout(pnOrders);
        pnOrders.setLayout(pnOrdersLayout);
        pnOrdersLayout.setHorizontalGroup(
            pnOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnOrdersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnOrdersLayout.setVerticalGroup(
            pnOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnOrdersLayout.createSequentialGroup()
                .addComponent(panelBorder3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabStatistics.addTab("Orders", pnOrders);

        pnUsers.setBackground(new java.awt.Color(255, 255, 255));

        panelBorder4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(127, 127, 127));
        jLabel4.setText("Users");

        spTable3.setBorder(null);

        tbl_U.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "User ID", "User Name", "Email", "Create Date"
            }
        ));
        spTable3.setViewportView(tbl_U);

        cboU_Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboU_Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboU_MonthActionPerformed(evt);
            }
        });

        cboU_Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboU_Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboU_YearActionPerformed(evt);
            }
        });

        jLabel89.setText("Year");

        jLabel78.setText("Month");

        btnU_Export.setBackground(new java.awt.Color(0, 102, 102));
        btnU_Export.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnU_Export.setForeground(new java.awt.Color(255, 255, 255));
        btnU_Export.setText("Export to Excel");
        btnU_Export.setBorderPainted(false);
        btnU_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnU_ExportActionPerformed(evt);
            }
        });

        lblTotalUsers.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lblTotalUsers.setForeground(new java.awt.Color(127, 127, 127));
        lblTotalUsers.setText("Total: ");

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(127, 127, 127));
        jLabel6.setText("Total: ");

        javax.swing.GroupLayout panelBorder4Layout = new javax.swing.GroupLayout(panelBorder4);
        panelBorder4.setLayout(panelBorder4Layout);
        panelBorder4Layout.setHorizontalGroup(
            panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder4Layout.createSequentialGroup()
                        .addComponent(spTable3)
                        .addContainerGap())
                    .addGroup(panelBorder4Layout.createSequentialGroup()
                        .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel78)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBorder4Layout.createSequentialGroup()
                                .addComponent(cboU_Month, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(jLabel89)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboU_Year, 0, 686, Short.MAX_VALUE))
                            .addGroup(panelBorder4Layout.createSequentialGroup()
                                .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTotalUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnU_Export, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        panelBorder4Layout.setVerticalGroup(
            panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnU_Export))
                .addGap(10, 10, 10)
                .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalUsers)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboU_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89)
                    .addComponent(cboU_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel78))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTable3, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnUsersLayout = new javax.swing.GroupLayout(pnUsers);
        pnUsers.setLayout(pnUsersLayout);
        pnUsersLayout.setHorizontalGroup(
            pnUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnUsersLayout.setVerticalGroup(
            pnUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnUsersLayout.createSequentialGroup()
                .addComponent(panelBorder4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TabStatistics.addTab("Users", pnUsers);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Statistics");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TabStatistics)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel102)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel102)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1285, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1285, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 722, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboTR_YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTR_YearActionPerformed
        int year = Integer.parseInt((String) cboTR_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboTR_Month.getSelectedItem());
        fillTableTR(year, month);
    }//GEN-LAST:event_cboTR_YearActionPerformed

    private void cboTR_MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTR_MonthActionPerformed
        int year = Integer.parseInt((String) cboTR_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboTR_Month.getSelectedItem());
        fillTableTR(year, month);
    }//GEN-LAST:event_cboTR_MonthActionPerformed

    private void btnTR_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTR_ExportActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Export to Excel");
        fileChooser.setSelectedFile(new File("BaoCaoDoanhThu.xlsx"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getPath();

            // Check if the user selected a file with the .xlsx extension
            if (!filePath.endsWith(".xlsx")) {
                filePath += ".xlsx";
            }

            try {
                ExcelUtils.exportToExcel(tbl_TR, filePath);
            } catch (Exception e) {

            }
        }


    }//GEN-LAST:event_btnTR_ExportActionPerformed

    private void cboTSP_MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTSP_MonthActionPerformed
        int year = Integer.parseInt((String) cboTSP_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboTSP_Month.getSelectedItem());
        fillTableTSP(year, month);
    }//GEN-LAST:event_cboTSP_MonthActionPerformed

    private void cboTSP_YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTSP_YearActionPerformed
        int year = Integer.parseInt((String) cboTSP_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboTSP_Month.getSelectedItem());
        fillTableTSP(year, month);
    }//GEN-LAST:event_cboTSP_YearActionPerformed

    private void btnTSP_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTSP_ExportActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Export to Excel");
        fileChooser.setSelectedFile(new File("TopSanPhamBanChay.xlsx"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getPath();

            // Check if the user selected a file with the .xlsx extension
            if (!filePath.endsWith(".xlsx")) {
                filePath += ".xlsx";
            }

            try {
                ExcelUtils.exportToExcel(tbl_TSP, filePath);
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_btnTSP_ExportActionPerformed

    private void cboO_MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboO_MonthActionPerformed
        int year = Integer.parseInt((String) cboO_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboO_Month.getSelectedItem());
        fillTableO(year, month);
        try {
            initLblTotalOrders(year, month);
        } catch (SQLException ex) {
            Logger.getLogger(Form_Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboO_MonthActionPerformed

    private void cboO_YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboO_YearActionPerformed
        int year = Integer.parseInt((String) cboO_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboO_Month.getSelectedItem());
        fillTableO(year, month);
        try {
            initLblTotalOrders(year, month);
        } catch (SQLException ex) {
            Logger.getLogger(Form_Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboO_YearActionPerformed

    private void btnO_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnO_ExportActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Export to Excel");
        fileChooser.setSelectedFile(new File("OrderDuocTaoTrongThang.xlsx"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getPath();

            if (!filePath.endsWith(".xlsx")) {
                filePath += ".xlsx";
            }

            try {
                ExcelUtils.exportToExcel(tbl_O, filePath);
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_btnO_ExportActionPerformed

    private void cboU_MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboU_MonthActionPerformed
        int year = Integer.parseInt((String) cboU_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboU_Month.getSelectedItem());
        fillTableU(year, month);
        try {
            initLblTotalUsers(year, month);
        } catch (SQLException ex) {
            Logger.getLogger(Form_Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboU_MonthActionPerformed

    private void cboU_YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboU_YearActionPerformed
        int year = Integer.parseInt((String) cboU_Year.getSelectedItem());
        int month = Integer.parseInt((String) cboU_Month.getSelectedItem());
        fillTableU(year, month);
        try {
            initLblTotalUsers(year, month);
        } catch (SQLException ex) {
            Logger.getLogger(Form_Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboU_YearActionPerformed

    private void btnU_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnU_ExportActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Export to Excel");
        fileChooser.setSelectedFile(new File("UserDuocTaoTrongThang.xlsx"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getPath();

            if (!filePath.endsWith(".xlsx")) {
                filePath += ".xlsx";
            }

            try {
                ExcelUtils.exportToExcel(tbl_U, filePath);
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_btnU_ExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane TabStatistics;
    private javax.swing.JButton btnO_Export;
    private javax.swing.JButton btnTR_Export;
    private javax.swing.JButton btnTSP_Export;
    private javax.swing.JButton btnU_Export;
    private javax.swing.JComboBox<String> cboO_Month;
    private javax.swing.JComboBox<String> cboO_Year;
    private javax.swing.JComboBox<String> cboTR_Month;
    private javax.swing.JComboBox<String> cboTR_Year;
    private javax.swing.JComboBox<String> cboTSP_Month;
    private javax.swing.JComboBox<String> cboTSP_Year;
    private javax.swing.JComboBox<String> cboU_Month;
    private javax.swing.JComboBox<String> cboU_Year;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lblTotalOrders;
    private javax.swing.JLabel lblTotalUsers;
    private com.raven.swing.PanelBorder panelBorder1;
    private com.raven.swing.PanelBorder panelBorder2;
    private com.raven.swing.PanelBorder panelBorder3;
    private com.raven.swing.PanelBorder panelBorder4;
    private javax.swing.JPanel pnBestSellProduct;
    private javax.swing.JPanel pnOrders;
    private javax.swing.JPanel pnTotalRevenue;
    private javax.swing.JPanel pnUsers;
    private javax.swing.JScrollPane spTable;
    private javax.swing.JScrollPane spTable1;
    private javax.swing.JScrollPane spTable2;
    private javax.swing.JScrollPane spTable3;
    private com.raven.swing.Table tbl_O;
    private com.raven.swing.Table tbl_TR;
    private com.raven.swing.Table tbl_TSP;
    private com.raven.swing.Table tbl_U;
    // End of variables declaration//GEN-END:variables

    ThongKeDAO tkDAO = new ThongKeDAO();

    void fillTableTR(int year, int month) {
        DefaultTableModel modelAddress = (DefaultTableModel) tbl_TR.getModel();
        modelAddress.setRowCount(0);
        try {
            List<Object> list = tkDAO.GetReneuve(year, month);

            for (Object obj : list) {
                if (obj instanceof Map) {
                    @SuppressWarnings("unchecked")
                    Map<String, Object> u = (Map<String, Object>) obj;
                    Object[] row = {
                        u.get("[Month_Year]"),
                        u.get("total_Revenue"),};
                    modelAddress.addRow(row);

                }
            }
        } catch (Exception e) {
            ThongBao.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }
    
    void fillTableTSP(int year, int month) {
        DefaultTableModel model = (DefaultTableModel) tbl_TSP.getModel();
        model.setRowCount(0);
        try {
            List<Object> list = ThongKeDAO.getBestSellProducts(year,month);
            int no = 1;
            for (Object obj : list ) {
                if (obj instanceof Map) {
                    @SuppressWarnings("unchecked")
                    Map<String, Object> u = (Map<String, Object>) obj;
                    Object[] row = {
                        no,
                        u.get("id"),
                        u.get("name"),
                        u.get("price"),
                        u.get("total_sold_quantity"),
                        u.get("total_revenue"),
                    };
                    model.addRow(row);
                    no++;
                }
            }
        } catch (Exception e) {
            ThongBao.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace(); 
        }
    }
    
    void initLblTotalUsers(int year, int month) throws SQLException{
        int totalUsers = ThongKeDAO.GetUserCount(year, month);
        lblTotalUsers.setText(String.valueOf(totalUsers));
    }
    
    void initLblTotalOrders(int year, int month) throws SQLException{
        int totalOrders = ThongKeDAO.GetOrderCount(year, month);
        lblTotalOrders.setText(String.valueOf(totalOrders));
    }
    
        void fillTableU(int year, int month) {
        DefaultTableModel model = (DefaultTableModel) tbl_U.getModel();
        model.setRowCount(0);
        try {
            List<Object> list = ThongKeDAO.getUsers(year,month);
            int no = 1;
            for (Object obj : list ) {
                if (obj instanceof Map) {
                    @SuppressWarnings("unchecked")
                    Map<String, Object> u = (Map<String, Object>) obj;
                    Object[] row = {
                        no,
                        u.get("id"),
                        u.get("name"),
                        u.get("email"),
                        u.get("[Month_Year]"),
                    };
                    model.addRow(row);
                    no++;
                }
            }
        } catch (Exception e) {
            ThongBao.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace(); 
        }
    }
        
        
        void fillTableO(int year, int month) {
        DefaultTableModel model = (DefaultTableModel) tbl_O.getModel();
        model.setRowCount(0);
        try {
            List<Object> list = ThongKeDAO.GetOrders(year,month);
            int no = 1;
            for (Object obj : list ) {
                if (obj instanceof Map) {
                    @SuppressWarnings("unchecked")
                    Map<String, Object> u = (Map<String, Object>) obj;
                    Object[] row = {
                        no,
                        u.get("OrderID"),
                        u.get("UserID"),
                        u.get("UserName"),
                        u.get("Email"),
                        u.get("Total"),
                        u.get("Date"),
                    };
                    model.addRow(row);
                    no++;
                }
            }
        } catch (Exception e) {
            ThongBao.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace(); 
        }
    }

}
